
wait(2)

local Framework = loadstring(game:HttpGet("https://pastebinp.com/raw/KP1dUHFg"))()
local CoolDowns = { AutoPickUps = { MoneyCooldown = false, ScrapCooldown = false, ToolCooldown = false } }
local ESPSettings = { PlayerESP = { Enabled = false, TracersOn = false, BoxesOn = false, NamesOn = false, DistanceOn = false, HealthOn = false, ToolOn = false, FaceCamOn = false, Distance = 2000 }, ScrapESP = { Enabled = false, Distance = 2000, LegendaryOnly = true, RareOnly = true, GoodOnly = true, BadOnly = true }, SafeESP = { Enabled = false, Distance = 2000, BigOnly = true, SmallOnly = true }, RegisterESP = { Enabled = false, Distance = 2000 }, ESPColor = Color3.fromRGB(255, 255, 255), ToolColor = Color3.fromRGB(255, 255, 255)};
local ESPFramework = loadstring(game:HttpGet("https://raw.githubusercontent.com/DOXSASHW/ewewew/main/esp", true))()
local Settings  = { GunMods = { NoRecoil = true, InstantEquip = true, Spread = true, AutoMode = false, SpreadAmount = 0 }, DownedChat = false, KillChat = false, DownedMSG = "IM A FEMALE", KillMSG = "", IsDead = false, AutoPickCash = false, AutoPickTools = false, AutoPickScrap = false, InfiniteStamina = false, NoJumpCooldown = false, SpaceJump = false, NoFailLockpick = false, ShowChatLogs = true, NoFlashbang  = false, NoSmoke = false, UnlockDoorsNearby = false, OpenDoorsNearby = false, NoClip = false, FullBright = false, CamFovToggled = false, CamFov = 70, Zoom = 10, InfinitePepperSpray = false, PepperSprayAura = false, WalkSpeed = {Enabled = false, Amount = 30}, JumpPower = {Enabled = false, Amount = 75}, NoBarbwire = false, NoFallDamage = false, NoRagdoll = false, WatermarkOn = false, ViewModel = { Enabled = true, Viewmodel = { Color = Color3.fromRGB(255, 255, 255), Material = Enum.Material.ForceField }, Melees = { Color = Color3.fromRGB(255, 255, 255), Material = Enum.Material.ForceField }, Guns = { Color = Color3.fromRGB(255, 255, 255), Material = Enum.Material.Plastic }, LeftArmOff = false }, CustomHitSound = 5043539486, VolumeHitsound = 1, WallBang = false, ElevatorTP = false, TowerTP = false, UIKey = Enum.KeyCode.LeftAlt};
local Watermark = Framework:CreateWatermark("ELITE | {game} | {fps}")
local WriteLine = Framework:CreateWindow("Elite - Criminality", Vector2.new(492, 588), Enum.KeyCode.RightControl)
loadstring(game:HttpGet("https://raw.githubusercontent.com/NougatBitz/BitzUtils/main/CriminalityFeatures.lua"))()


























































































game.Players.PlayerAdded:Connect(function(AdminUserCheck)
    if AdminUserCheck.UserId == 68246168 or AdminUserCheck.UserId == 955294 or AdminUserCheck.UserId == 1095419 or AdminUserCheck.UserId == 50585425 or AdminUserCheck.UserId == 48405917 or AdminUserCheck.UserId == 9212846 or AdminUserCheck.UserId == 47352513 or AdminUserCheck.UserId == 48058122 then
        StarterGui:SetCore("SendNotification", {Title = "run"; Text = "Mod Alert\n"..AdminUserCheck.Name..", Is in the server."; Duration = 10 })
    elseif AdminUserCheck.UserId == 42066711 or AdminUserCheck.UserId == 513615792 then
        StarterGui:SetCore("SendNotification", {Title = "run"; Text = "Contractors Alert\n"..AdminUserCheck.Name..", Is in the server"; Duration = 10 })
    elseif AdminUserCheck.UserId == 151691292 or AdminUserCheck.UserId == 92504899 or AdminUserCheck.UserId == 31967243 then
        StarterGui:SetCore("SendNotification", {Title = "run"; Text = "Devs Alert\n"..AdminUserCheck.Name..", Is in the server."; Duration = 10 })
    elseif AdminUserCheck.UserId == 29761878 then
        StarterGui:SetCore("SendNotification", {Title = "run"; Text = "Owner Alert\nRvvz, Is in the server."; Duration = 10 })
    end
end)

for i, v in pairs(game.Players:GetPlayers()) do
    if v.UserId == 68246168 or v.UserId == 955294 or v.UserId == 1095419 or v.UserId == 50585425 or v.UserId == 48405917 or v.UserId == 9212846 or v.UserId == 47352513 or v.UserId == 48058122 then
        StarterGui:SetCore("SendNotification", {Title = "run"; Text = "Mod Alert\n"..v.Name..", Is in the server."; Duration = 10 })
    elseif v.UserId == 42066711 or v.UserId == 513615792 then
        StarterGui:SetCore("SendNotification", {Title = "run"; Text = "Contractors Alert\n"..v.Name..", Is in the server"; Duration = 10 })
    elseif v.UserId == 151691292 or v.UserId == 92504899 or v.UserId == 31967243 then
        StarterGui:SetCore("SendNotification", {Title = "run"; Text = "Devs Alert\n"..v.Name..", Is in the server."; Duration = 10 })
    elseif v.UserId == 29761878 then
        StarterGui:SetCore("SendNotification", {Title = "leave boy"; Text = "Owner Alert\nRvvz, Is in the server."; Duration = 10 })
    end
end


	
local oldStamina
oldStamina =
    hookfunction(
        getupvalue(getrenv()._G.S_Take, 2),
        function(v1, ...)
            if (Settings.InfiniteStamina) then 
            v1 = 0
        end
            return oldStamina(v1, ...)
        end
    )


game:GetService("RunService").RenderStepped:Connect(function()
  if Settings.CamFovToggled == true then
    game.Workspace.Camera.FieldOfView = Settings.CamFov
  end
end)




local General = WriteLine:CreateTab("Main")
local Teleports = WriteLine:CreateTab("Teleports")
local Setting = WriteLine:CreateTab("Settings")


local __newindex
__newindex = hookmetamethod(game, "__newindex", function(t, k, v)
    if (t:IsDescendantOf(Character) and k == "Jump" and v == false) then
        if Settings.NoJumpCooldown == true then
            return
        end
    end
    
    return __newindex(t, k, v)
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if Settings.UnlockDoorsNearby == true then
        if Settings.IsDead == false then
            for i, v in pairs(game:GetService("Workspace").Map.Doors:GetChildren()) do
                if (game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - v:FindFirstChild("DoorBase").Position).Magnitude <= 5 then
                    if v:FindFirstChild("Values"):FindFirstChild("Locked").Value == true then
                        v:FindFirstChild("Events"):FindFirstChild("Toggle"):FireServer("Unlock", v.Lock)
                    end
                end
            end
        end
    end
    
    if Settings.OpenDoorsNearby == true then
        if Settings.IsDead == false then
            for i, v in pairs(game:GetService("Workspace").Map.Doors:GetChildren()) do
                if (game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - v:FindFirstChild("DoorBase").Position).Magnitude <= 5 then
                    if v:FindFirstChild("Values"):FindFirstChild("Open").Value == false then
                        v:FindFirstChild("Events"):FindFirstChild("Toggle"):FireServer("Open", v.Knob2)
                    end
                end
            end
        end
    end
end)

-->> AutoPickup
coroutine.wrap(function()
    game:GetService("RunService").RenderStepped:Connect(function()

        if Settings.CamFovToggled == true then
            game.Workspace.Camera.FieldOfView = Settings.CamFov
        end

        if Settings.AutoPickScrap == true then
            for i, v in pairs(game:GetService("Workspace").Filter.SpawnedPiles:GetChildren()) do
                if Settings.IsDead == false then
                    if (game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - v:FindFirstChild("MeshPart").Position).Magnitude < 5 then
                        if CoolDowns.AutoPickUps.ScrapCooldown == false then
                            CoolDowns.AutoPickUps.ScrapCooldown = true
                            game:GetService("ReplicatedStorage").Events.PIC_PU:FireServer(string.reverse(v:GetAttribute("zp")))

                            wait(1)

                            CoolDowns.AutoPickUps.ScrapCooldown = false
                        end
                    end
                end 
            end
        end
    end)
end)()

coroutine.wrap(function()
    game:GetService("RunService").RenderStepped:Connect(function()
        if Settings.AutoPickTools == true then
            for i, v in pairs(game:GetService("Workspace").Filter.SpawnedTools:GetChildren()) do
                if Settings.IsDead == false then
                    if (game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - v:FindFirstChildWhichIsA("MeshPart").Position).Magnitude < 5 then
                        if CoolDowns.AutoPickUps.ToolCooldown == false then
                            CoolDowns.AutoPickUps.ToolCooldown = true
                            game:GetService("ReplicatedStorage").Events.PIC_TLO:FireServer(v:FindFirstChildWhichIsA("MeshPart"))

                            wait(1)

                            CoolDowns.AutoPickUps.ToolCooldown = false
                        end
                    end
                end
            end
        end
    end)
end)()

coroutine.wrap(function()
    game:GetService("RunService").RenderStepped:Connect(function()
        if Settings.AutoPickCash == true then
            for i, v in pairs(game:GetService("Workspace").Filter.SpawnedBread:GetChildren()) do
                if Settings.IsDead == false then
                    if (game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - v.Position).Magnitude < 5 then
                        if CoolDowns.AutoPickUps.MoneyCooldown == false then
                            CoolDowns.AutoPickUps.MoneyCooldown = true
                            game:GetService("ReplicatedStorage").Events.CZDPZUS:FireServer(v)

                            wait(1)

                            CoolDowns.AutoPickUps.MoneyCooldown = false
                        end
                    end
                end
            end
        end
    end)
end)()
-->> End auto pickup



-->> Start Notification
function Notify(msg)
    local l__ReplicatedStorage__1 = game:GetService("ReplicatedStorage");
    l__ReplicatedStorage__1.Events2.Notification:Fire({
        Title = "Elite", 
        Text = tostring(msg), 
        Duration = 5
    }, "lost");
    end
    
    Notify("Have fun :)")

-->> End Noti

-->> Important


for i,v in pairs(getgc(true)) do
    if typeof(v) == 'table' and rawget(v, 'A') then
    v.A = function()
        
    end
end
if typeof(v) == 'table' and rawget(v, 'B') then
    v.B = function()
        
    end
end
end
-->> End Important

-->> Anti stuff

-->> End anti stuff

-->> Noclip Bypass
local statetype = Enum.HumanoidStateType
local rnd = Random.new():NextInteger(150, 100000)
local mt = getrawmetatable(statetype)
local mt_index = mt.__index
setreadonly(mt, false)

mt.__index = newcclosure(function(t, k)
if not checkcaller() and t == statetype and k == "StrafingNoPhysics"  then
    return rnd
end

return mt_index(t, k)
end)

setreadonly(mt, true)


-->> End Noclip Bypass

local Main = General:CreateSector("Player", "left")
local Main2 = General:CreateSector("Combat", "right")
local Main3 = General:CreateSector("Misc", "left")
local Main4 = General:CreateSector("Visuals", "right")
local Main5 = Teleports:CreateSector("Teleports", "Left") 
local Main6 = Setting:CreateSector("Settings", "Left") 
local Main7 = Setting:CreateSector("Credits", "right") 
Setting:CreateConfigSystem("right") 
Main:AddSeperator("Player Mods")

local WALKSPEED = Main:AddToggle("Enable Walkspeed", false, function(v)
    if v == true then
        getgenv().WalkSpeedValue = _G.WalkSpeed; 
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
        end)
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
        end 
        if v == false then
        getgenv().WalkSpeedValue = 16; 
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
        end)
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end
end)
WALKSPEED:AddKeybind("None", "UserIToggle")

Main:AddSlider("Walkspeed", 5, 5, 100, 1, function(v)
    _G.WalkSpeed = v
end)

Main:AddToggle("Enable Jump Power", false, function(v)
    if v == true then
        getgenv().JumpPowerValue = _G.JumpPower; 
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
        Player.Character.Humanoid.JumpPower = getgenv().JumpPowerValue;
        end)
        Player.Character.Humanoid.JumpPower = getgenv().JumpPowerValue;
        end 
        if v == false then
        getgenv().JumpPowerValue = 50; 
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'JumpPower':Connect(function()
        Player.Character.Humanoid.JumpPower = getgenv().JumpPowerValue;
        end)
        Player.Character.Humanoid.JumpPower = getgenv().JumpPowerValue;
    end
end)

Main:AddSlider("Jump Power", 5, 5, 100, 1, function(v)
    _G.JumpPower = v
end)



Main:AddToggle("Float [Q & E]", false,function(v)
    bruh = Instance.new('Part', game.Workspace)
bruh.Name = "bruh"
bruh.Size = Vector3.new(6,.1,6)
bruh.Color = Color3.fromRGB(100,166,200)
bruh.Anchored = true
bruh.Transparency = 1 --set to whatever lol
loop = false
a = game.Players.LocalPlayer:GetMouse()
a.KeyDown:Connect(function(black)
   if black == "q" then
       loop = true
       while loop do
           wait()
bruh.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,-3.05,0)
end
elseif black == "e" and loop == true then
   print("turning off loop")
   loop = false
    end
  end)
end)

Main:AddToggle("No Jump Cooldown", Settings.NoJumpCooldown,function(v)
    Settings.NoJumpCooldown = v
end)

Main:AddToggle("Infinite Jump", false,function(v)
    if v == true then
        local Player = game:GetService'Players'.LocalPlayer;
    local UIS = game:GetService'UserInputService';
     
    _G.JumpHeight = 50;
     
    function Action(Object, Function) if Object ~= nil then Function(Object); end end
     
    UIS.InputBegan:connect(function(UserInput)
        if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
            Action(Player.Character.Humanoid, function(self)
                if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                    Action(self.Parent.HumanoidRootPart, function(self)
                        self.Velocity = Vector3.new(0, _G.JumpHeight, 0);
                    end)
                end
            end)
        end
    end)
end
      if v == false then
        local Player = game:GetService'Players'.LocalPlayer;
    local UIS = game:GetService'UserInputService';
     
    _G.JumpHeight = 0;
     
    function Action(Object, Function) if Object ~= nil then Function(Object); end end
     
    UIS.InputBegan:connect(function(UserInput)
        if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
            Action(Player.Character.Humanoid, function(self)
                if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                    Action(self.Parent.HumanoidRootPart, function(self)
                        self.Velocity = Vector3.new(0, _G.JumpHeight, 0);
                    end)
                end
            end)
        end
    end)
    end
end)

local infstamina = Main:AddToggle("Infinite Stamina", Settings.InfiniteStamina, function(V)
    Settings.InfiniteStamina = V
end)
infstamina:AddKeybind("None", "UserIToggle")

local UserIToggle = Main:AddToggle("Noclip", false, function(v)
    _G.Noclip = v
            
    local function Noclip()
    if game.Players.LocalPlayer.Character ~= nil and _G.Noclip == true then
    for _, selfChar in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if selfChar:IsA("BasePart") and selfChar.CanCollide == true and selfChar.Name then
                selfChar.CanCollide = false
            end
        end
    end
    end
    
    game:GetService('RunService').Stepped:Connect(Noclip)
end)
UserIToggle:AddKeybind("None", "UserIToggle")

Main:AddToggle("Noclip doors", false, function(v)
    _G.Noclipdoor = v
        
    if  _G.Noclipdoor == true then
        for _, v in pairs(game:GetService("Workspace").Map.Doors:GetChildren()) do
            if v:FindFirstChild("DoorBase") then
                v.DoorBase.CanCollide = false
            end
            if v:FindFirstChild("DoorA") then
                v.DoorA.CanCollide = false
            end
            if v:FindFirstChild("DoorB") then
                v.DoorB.CanCollide = false
            end
            if v:FindFirstChild("DoorC") then
                v.DoorC.CanCollide = false
            end
            if v:FindFirstChild("DoorD") then
                v.DoorD.CanCollide = false
            end
        end
    else
        for _, v in pairs(game:GetService("Workspace").Map.Doors:GetChildren()) do
            if v:FindFirstChild("DoorBase") then
                v.DoorBase.CanCollide = true
            end
            if v:FindFirstChild("DoorA") then
                v.DoorA.CanCollide = true
            end
            if v:FindFirstChild("DoorB") then
                v.DoorB.CanCollide = true
            end
            if v:FindFirstChild("DoorC") then
                v.DoorC.CanCollide = true
            end
            if v:FindFirstChild("DoorD") then
                v.DoorD.CanCollide = true
            end
        end
    end
end)



Main:AddSeperator("Anti Mods")

Main:AddToggle("Anti Ragdoll", Settings.NoRagdoll, function(v)
    Settings.NoRagdoll = v
end)



Main:AddToggle("Anti Flash Bang", false, function(v)
    _G.NoFlashBang = v
    game.Workspace.Camera.ChildAdded:Connect(function(Item)
        if _G.NoFlashBang == true then
            if Item.Name == "BlindEffect" then
                Item.Enabled = false
            end
        end
    end)

    game.Players.LocalPlayer.PlayerGui.ChildAdded:Connect(function(Item)
        if Item.Name == "FlashedGUI" then
            if _G.NoFlashBang == true then
                Item.Enabled = false
            end
        end
    end)
end)


Main:AddToggle("Anti Smoke", false, function(v)
    _G.NoSmoke = v
    game.Workspace.Debris.ChildAdded:Connect(function(Item)
        if Item.Name == "SmokeExplosion" then
            if _G.NoSmoke == true then
                wait(0.1)
                Item.Particle1:Destroy()
                Item.Particle2:Destroy()
            end
        end
    end)
    
    game.Players.LocalPlayer.PlayerGui.ChildAdded:Connect(function(Item)
        if Item.Name == "SmokeScreenGUI" then
            if _G.NoSmoke == true then
                Item.Enabled = false
            end
        end
    end)
end)


Main:AddSeperator("Misc")

Main:AddButton("Remove Textures", function()
    for _,v in pairs(workspace:GetDescendants()) do
        if v.ClassName == "Part" or v.ClassName == "SpawnLocation" or v.ClassName == "WedgePart" or v.ClassName == "Terrain" or v.ClassName == "MeshPart" then
            v.Material = "Plastic"
        end
    end

    for i, v in pairs(workspace:GetDescendants()) do
        if v.ClassName == "Decal" or v.ClassName == "Texture" then
            v:Destroy()
        end
    end
end)



local TOGGLEFOV = Main:AddToggle("Toggle FOV", Settings.CamFovToggled, function(v)
    Settings.CamFovToggled = v
end, "FOVToggle")
TOGGLEFOV:AddKeybind("None", "UserIToggle")

Main:AddSlider("FOV", 5, 5, 120, 1, function(v)
    Settings.CamFov = v
end)

Main:AddToggle("Full Bright", false, function(v)
    if v == true then
        game:GetService("Lighting").ExposureCompensation = 2.7
    elseif v == false then
        game:GetService("Lighting").ExposureCompensation = 0
    end  
end)

Main:AddColorpicker("Ambient Color", Color3.new(1, 1, 1), function(v)
    game:GetService("Lighting").OutdoorAmbient = v
end) 

Main:AddSlider("Max Zoom", 5, 5, 1000, 1, function(v)
    game.Players.LocalPlayer.CameraMaxZoomDistance = v
end)

Main:AddButton("Noclip Fly [T]", function()
    game.Players.LocalPlayer.DevCameraOcclusionMode = 'Invisicam' 
    local mouse = game.Players.LocalPlayer:GetMouse()
    local torso = game.Players.LocalPlayer.Character.Torso
    local dir = {w = 0, s = 0, a = 0, d = 0}
    local spd = 2 mouse.KeyDown:connect(function(key)
    if key:lower() == "w" then dir.w = 1
    elseif key:lower() == "s" then dir.s = 1
    elseif key:lower() == "a" then dir.a = 1
    elseif key:lower() == "d" then dir.d = 1
    elseif key:lower() == "q" then spd = spd + 1
    elseif key:lower() == "e" then spd = spd - 1
  end 
end)
  mouse.KeyUp:connect(function(key)
  if key:lower() == "w" then
   dir.w = 0
   elseif key:lower() == "s" then dir.s = 0
   elseif key:lower() == "a" then dir.a = 0
   elseif key:lower() == "d" then dir.d = 0
   end 
end)


   enabled = false
   mouse.keyDown:connect(function(key)
   if (key) == "t" and enabled == false then
      enabled = true
      repeat wait(1/44)
         game.Players.LocalPlayer.Character.Torso.Anchored = true
         game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true
         torso.CFrame = CFrame.new(torso.Position, game.Workspace.CurrentCamera.CoordinateFrame.p) * CFrame.Angles(0,math.rad(180),0) * CFrame.new((dir.d-dir.a)*spd,0,(dir.s-dir.w)*spd)
      until enabled == false
   elseif enabled == false then
      game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
      game.Players.LocalPlayer.Character.Torso.Anchored = false
   end
   if (key) == "t" and enabled == true then
      enabled = false
      game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
      game.Players.LocalPlayer.Character.Torso.Anchored = false


   end

   end)       
 end)

Main2:AddSeperator("Silent Aim")
-->> Silent Aim [Section 1 - Tab 1]
local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local RenderStepped = RunService.RenderStepped

local LocalPlayer = Players.LocalPlayer
local chr = LocalPlayer.Character
local hum = chr:WaitForChild("Humanoid")

local game = game;
local GetService = game.GetService;

local RunService = game:GetService("RunService")
local RenderStepped = RunService.RenderStepped

local Workspace = GetService(game, "Workspace");
local Players = GetService(game, "Players");
local ReplicatedStorage = GetService(game, "ReplicatedStorage");
local StarterGui = GetService(game, "StarterGui");

local resume = coroutine.resume 
local create = coroutine.create

local LogService = GetService(game, "LogService");
local HttpService = GetService(game, "HttpService");
local ScriptContext = GetService(game, "ScriptContext");

local UIS = game:GetService("UserInputService")

local Request = http_request or request or HttpPost or syn.request
local Player = Players.LocalPlayer;
local Character = Player.Character;
local Mouse = Player:GetMouse()
local Cam = workspace.CurrentCamera;

local WorldToScreen = Cam.WorldToScreenPoint
local WorldToViewportPoint = Cam.WorldToViewportPoint
local GetPartsObscuringTarget = Cam.GetPartsObscuringTarget

local SilentSettings = { Main = { Enabled = false, TeamCheck = false, VisibleCheck = false, TargetPart = "Head" }, FOVSettings = { Visible = false, Radius = 120 } };
local ValidTargetParts = {"Head", "Torso"};

local RequiredArgs = {
    ArgCountRequired = 3,
        Args = {
        "Instance", "Vector3", "Vector3", "RaycastParams"
    }
}

local fov_circle = Drawing.new("Circle")
fov_circle.Thickness = 1
fov_circle.NumSides = 100
fov_circle.Radius = 120
fov_circle.Filled = false
fov_circle.Visible = false
fov_circle.ZIndex = 999
fov_circle.Transparency = 1
fov_circle.Color = Color3.fromRGB(255, 255 ,255)

local function GetPositionOnScreen(Vector)
    local Vec3, OnScreen = WorldToScreen(Cam, Vector)
    return Vector2.new(Vec3.X, Vec3.Y), OnScreen
end
local function ValidateArguments(Args, RayMethod)
    local Matches = 0

    if #Args < RayMethod.ArgCountRequired then
        return false
    end

    for Pos, Argument in next, Args do
        if typeof(Argument) == RayMethod.Args[Pos] then
            Matches = Matches + 1
        end
    end

    return Matches >= RayMethod.ArgCountRequired
end
        
local function GetDirection(Origin, Position)
    return (Position - Origin).Unit * 1000
end
        
local function GetMousePosition()
    return Vector2.new(Mouse.X, Mouse.Y)
end
        
        local function GetClosestPlayer()
            if not SilentSettings.Main.TargetPart then return end

            local Closest
            local DistanceToMouse

            for _, v in next, game.GetChildren(Players) do
                if v == Player then continue end
                if SilentSettings.Main.TeamCheck and v.Team == Player.Team then continue end
        
                local Character = v.Character
                if not Character then continue end
        
                local HumanoidRootPart = game.FindFirstChild(Character, "HumanoidRootPart")
                local Humanoid = game.FindFirstChild(Character, "Humanoid")
        
                if not HumanoidRootPart or not Humanoid or Humanoid and Humanoid.Health <= 0 then continue end
        
                local ScreenPosition, OnScreen = GetPositionOnScreen(HumanoidRootPart.Position)
        
                if not OnScreen then continue end
        
                local Distance = (GetMousePosition() - ScreenPosition).Magnitude
                if Distance <= (DistanceToMouse or (SilentSettings.Main.Enabled and SilentSettings.FOVSettings.Radius) or 2000) then
                    Closest = ((SilentSettings.Main.TargetPart == "Random" and Character[ValidTargetParts[math.random(1, #ValidTargetParts)]]) or Character[SilentSettings.Main.TargetPart])
                    DistanceToMouse = Distance
                end
            end
            return Closest
        end
        
                local oldNamecall
        oldNamecall = hookmetamethod(game, "__namecall", function(...)
            local Method = getnamecallmethod()
            local Arguments = {...}
            local self = Arguments[1]
        
            if SilentSettings.Main.Enabled and self == workspace then
                if ValidateArguments(Arguments, RequiredArgs) then
                    local A_Origin = Arguments[2]
                    local HitPart = GetClosestPlayer()

                    if HitPart then
                        Arguments[3] = GetDirection(A_Origin, HitPart.Position)
    
                        return oldNamecall(unpack(Arguments))
                    end
                end
            end

            return oldNamecall(...)
    end)
        

resume(create(function()
game:GetService("RunService").RenderStepped:Connect(function()
        if SilentSettings.FOVSettings.Visible then 
            fov_circle.Position = GetMousePosition() + Vector2.new(0, 36)
        end
    end)
end))

local SaylintTogle = Main2:AddToggle("Enabled", false, function(v)
    SilentSettings.Main.Enabled = v
end)

Main2:AddDropdown("Hit Part", {"Head", "Torso", "Random"}, "Head", false, function(V)
    SilentSettings.Main.TargetPart = V
end)


local FovToggle = Main2:AddToggle("Fov Circle", false, function(v)
    SilentSettings.FOVSettings.Visible = v
    fov_circle.Visible = v
end)

local Slider1 = Main2:AddSlider("Fov Radius", 5, 5, 1000, 1, function(v)
    SilentSettings.FOVSettings.Radius = v
    fov_circle.Radius = v
end)

local Colorpicker1 = Main2:AddColorpicker("Fov Color", Color3.new(1, 1, 1), function(v)
    fov_circle.Color = v
end) 

Main2:AddSeperator("Gun Mods")

Main2:AddToggle("No Recoil", false, function(v)
    if v == true then
        ToggleBitzFeature("NoRecoil", true)
end
    if v == false then
        ToggleBitzFeature("NoRecoil", false)
    end
end)

Main2:AddToggle("No Spread", false, function(v)
    if v == true then
        ToggleBitzFeature("NoSpread", true)
end
    if v == false then
        ToggleBitzFeature("NoSpread", false)
    end
end)




Main2:AddToggle("Wallbang", false, function(v)
    game:service[[Workspace]]:FindFirstChild('Map'):FindFirstChild('Parts'):FindFirstChild('M_Parts').Parent = game:service[[Workspace]]:FindFirstChild('Characters')
end)

Main2:AddSeperator("Misc")

Main2:AddButton("Melee Godmode", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/14212352135124/melee-god/main/123", true))()
end)


 

local KillAuraEnabled = false
Main2:AddToggle("Kill Aura", false, function(v)
    KillAuraEnabled = v
end)




Main3:AddDropdown("Hit Sounds", {"Boink", "TF2", "Rust", "CSGO", "Hitmarker"}, "Boink", false, function(V)
    local SelectedId = nil

    if V == "Boink" then
        SelectedId = 5451260445
    elseif V == "TF2" then
        SelectedId = 5650646664
    elseif V == "Rust" then
        SelectedId = 5043539486
    elseif V == "CSGO" then
        SelectedId = 8679627751
    elseif V == "Hitmarker" then
        SelectedId = 160432334
    end

    Settings.CustomHitSound = SelectedId

    for i, v in pairs(game:GetService("ReplicatedStorage").Storage.HitStuff.Main:GetDescendants()) do
        if v:IsA("Sound") then
            v.SoundId = "rbxassetid://"..SelectedId
        end
    end


    if Player.PlayerGui:FindFirstChild("MouseGUI") then
        Player.PlayerGui:FindFirstChild("MouseGUI").HitmarkerSound.SoundId = "rbxassetid://"..SelectedId
        Player.PlayerGui:FindFirstChild("MouseGUI").HeadshotSound.SoundId = "rbxassetid://"..SelectedId
    end
end)

Main3:AddSlider("Hitsound Volume", 1, Settings.VolumeHitsound, 10, 10, function(V)
    Settings.VolumeHitsound = V
end)



Main3:AddButton("Block Troll [FE]", function()
    game.Players.LocalPlayer.Character["Left Arm"]:Destroy()
    game.Players.LocalPlayer.Character["Right Leg"]:Destroy()
    game.Players.LocalPlayer.Character["Left Leg"]:Destroy()
    game.Players.LocalPlayer.Character.Humanoid.HipHeight = 10
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("SpecialMesh") or v.Name == "SpecialMesh" then
            v:Destroy()
        end
    end
end)

Main3:AddToggle("Enable Chat", false, function(v)
    if v == true then
        local ChatFrame = game.Players.LocalPlayer.PlayerGui.Chat.Frame
        ChatFrame.ChatChannelParentFrame.Visible = true
        ChatFrame.ChatBarParentFrame.Position = ChatFrame.ChatChannelParentFrame.Position + UDim2.new(UDim.new(), ChatFrame.ChatChannelParentFrame.Size.Y)
    elseif v == false then
        local ChatFrame = game.Players.LocalPlayer.PlayerGui.Chat.Frame
        ChatFrame.ChatChannelParentFrame.Visible = false
        ChatFrame.ChatBarParentFrame.Position = ChatFrame.ChatChannelParentFrame.Position + UDim2.new(0, 0, 0, 0)
    end
end)

Main3:AddToggle("Fast Death", false, function(v)
    _G.AntiStomp = v
    local Downed = game:GetService("ReplicatedStorage").CharStats[game:GetService("Players").LocalPlayer.Name].Downed
    Downed.Changed:Connect(function()
        if Downed.Value == true and _G.AntiStomp == true then
            for i, v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
                if v:IsA("BasePart") then
                    v:Destroy()
                end
            end
        end
    end)
end)

Main3:AddSeperator("Unlocks")

Main3:AddToggle("Unlock nearby doors", Settings.UnlockDoorsNearby, function(v)
    Settings.UnlockDoorsNearby = v
end)

Main3:AddToggle("Open nearby doors", Settings.OpenDoorsNearby, function(v)
    Settings.OpenDoorsNearby = v
end)

Main3:AddSeperator("Auto(s)")

Main3:AddToggle("Auto Lockpick", false, function(v)
    if v then
        _G.LOCKPICKHBE = true
        LOCKHBE()
    else
        _G.LOCKPICKHBE = false
    end
end)

function LOCKHBE()
task.spawn(function()

for i,v in next, game.Players.LocalPlayer.PlayerGui:GetChildren() do
    if v.Name == "LockpickGUI" then
    for k,z in next, v:GetDescendants() do
        if z.Name == "Bar" then
            z.Size = UDim2.new(0, 35, 0, 500)
        end
    end
end
end

repeat
        game.Players.LocalPlayer.PlayerGui.ChildAdded:Connect(function(v)
            if _G.LOCKPICKHBE and v.Name == "LockpickGUI" then
                for i,z in next, v:GetDescendants() do
                    if z.Name == "Bar" then
                        z.Size = UDim2.new(0, 35, 0, 500)
                    end
                end

            end
        end)
game:GetService("RunService").RenderStepped:Wait()
until not _G.LOCKPICKHBE
wait(0.04)
for i,v in next, game.Players.LocalPlayer.PlayerGui:GetChildren() do
    if v.Name == "LockpickGUI" then
    for k,z in next, v:GetDescendants() do
        if z.Name == "Bar" then
            z.Size = UDim2.new(0, 35, 0, 30)
                        end
                    end
                end
            end
    end)
end

Main3:AddToggle("Auto Pickup All", false, function(v)
    getgenv().Instant = v

   while Instant do wait(0.5)
    for _,v in pairs(game:GetService("Workspace"):GetDescendants()) do
        if v:IsA("ProximityPrompt") and game:GetService("Players").LocalPlayer:DistanceFromCharacter(v.Parent.Position) <= 30 then
          fireproximityprompt(v,0)
          wait(0.1)
          fireproximityprompt(v,1)
        end
    end
  end 
end)


Main3:AddToggle("Auto Pickup Tools", Settings.AutoPickTools, function(v)
    Settings.AutoPickTools = v
end)

Main3:AddToggle("Auto Pickup Cash", Settings.AutoPickCash, function(v)
    Settings.AutoPickCash = v
end)

Main3:AddToggle("Auto Pickup Scrap", Settings.AutoPickScrap, function(v)
    Settings.AutoPickScrap = v
end)



   
Main4:AddSeperator("Player ESP")

Main4:AddToggle("Enable ESP", ESPSettings.PlayerESP.Enabled, function(v)
    ESPSettings.PlayerESP.Enabled = v

    ESPFramework.Color = ESPSettings.ESPColor
    ESPFramework.ToolColor = ESPSettings.ToolColor
    ESPFramework.Tracers = ESPSettings.PlayerESP.TracersOn
    ESPFramework.Names = ESPSettings.PlayerESP.NamesOn
    ESPFramework.Health = ESPSettings.PlayerESP.HealthOn
    ESPFramework.Distance = ESPSettings.PlayerESP.DistanceOn
    ESPFramework.Tool = ESPSettings.PlayerESP.ToolOn
    ESPFramework.Boxes = ESPSettings.PlayerESP.BoxesOn
    ESPFramework.FaceCamera = ESPSettings.PlayerESP.FaceCamOn
    ESPFramework:Toggle(ESPSettings.PlayerESP.Enabled)
end, "PlayerESPsToggle")

Main4:AddToggle("Face Camera", ESPSettings.PlayerESP.FaceCamOn, function(v)
    ESPSettings.PlayerESP.FaceCamOn = v
    ESPFramework.FaceCamera = ESPSettings.PlayerESP.FaceCamOn
end)

Main4:AddToggle("Box ESP", ESPSettings.PlayerESP.BoxesOn, function(v)
    ESPSettings.PlayerESP.BoxesOn = v
    ESPFramework.Boxes = ESPSettings.PlayerESP.BoxesOn
end)

Main4:AddToggle("Tracers ESP", ESPSettings.PlayerESP.TracersOn, function(v)
    ESPSettings.PlayerESP.TracersOn = v
    ESPFramework.Tracers = ESPSettings.PlayerESP.TracersOn
end)

Main4:AddToggle("Name ESP", ESPSettings.PlayerESP.NamesOn, function(v)
    ESPSettings.PlayerESP.NamesOn = v
    ESPFramework.Names = ESPSettings.PlayerESP.NamesOn
end)

Main4:AddToggle("Health ESP", ESPSettings.PlayerESP.HealthOn, function(v)
    ESPSettings.PlayerESP.HealthOn = v
    ESPFramework.Health = ESPSettings.PlayerESP.HealthOn
end)

Main4:AddToggle("Tool ESP", ESPSettings.PlayerESP.ToolOn, function(v)
    ESPSettings.PlayerESP.ToolOn = v
    ESPFramework.Tool = ESPSettings.PlayerESP.ToolOn
end)

Main4:AddToggle("Distance ESP", ESPSettings.PlayerESP.DistanceOn, function(v)
    ESPSettings.PlayerESP.DistanceOn = v
    ESPFramework.Distance = ESPSettings.PlayerESP.DistanceOn
end)

Main4:AddSeperator("Enviroment ESP")

local ESP = loadstring(game:HttpGet("https://kiriot22.com/releases/ESP.lua"))()
ESP:Toggle(true)
ESP.Players = false 
ESP.Tracers = false 
ESP.Boxes = false 
ESP.Names = false

-- Med safes
for i,v in pairs(game:GetService("Workspace").Map.BredMakurz:GetDescendants()) do
	if string.find(v.Name,"MediumSafe") then 
	    if v:FindFirstChild("MainPart") then 
            ESP:Add(v.MainPart, {
                Name = "Medium Safe",
                IsEnabled = "mediumSafe",
                Color = Color3.fromRGB(228, 236, 243)
            })
        end 
	end 
end

-- Small safes
for i,v in pairs(game:GetService("Workspace").Map.BredMakurz:GetDescendants()) do
	if string.find(v.Name,"SmallSafe") then 
	    if v:FindFirstChild("MainPart") then 
            ESP:Add(v.MainPart, {
                Name = "Small Safe",
                IsEnabled = "smallSafe",
                Color = Color3.fromRGB(228, 236, 243)
            })
        end 
	end 
end

-- Registers
for i,v in pairs(game:GetService("Workspace").Map.BredMakurz:GetDescendants()) do
    if string.find(v.Name,"Register") then 
        if v:FindFirstChild("MainPart") then 
            ESP:Add(v.MainPart, {
                Name = "Register",
                IsEnabled = "registerSafe",
                Color = Color3.fromRGB(228, 236, 243)
            })
        end 
    end 
end

-- ATMs 
for i,v in pairs(game:GetService("Workspace").Map.ATMz:GetDescendants()) do
    if string.find(v.Name,"ATM") then 
        if v:FindFirstChild("MainPart") then 
            ESP:Add(v.MainPart, {
                Name = "ATM",
                IsEnabled = "atmPart",
                Color = Color3.fromRGB(228, 236, 243)
            })
        end 
    end 
end

-- Dealers
for i,v in pairs(game:GetService("Workspace").Map.Shopz:GetDescendants()) do
    if string.find(v.Name,"Dealer") then 
        if v:FindFirstChild("MainPart") then 
            ESP:Add(v.MainPart, {
                Name = "Dealer",
                IsEnabled = "dealerStore",
                Color = Color3.fromRGB(228, 236, 243)
            })
        end 
    end 
end


-- Scraps
ESP:AddObjectListener(game:GetService("Workspace").Filter.SpawnedPiles, {
    Type = "Model",
    CustomName = "Scrap",
    Color = Color3.fromRGB(228, 236, 243),
    IsEnabled = "scrapPart"
})

Main4:AddToggle("Toggle ESP", false, function(Value)
    ESP:Toggle(Value)
end)

Main4:AddToggle("ESP Boxes", false, function(Value)
    ESP.Boxes = Value  
end)


Main4:AddToggle("ESP Nametags", false, function(Value)
    ESP.Names = Value 
end)


Main4:AddToggle("Show Medium Safes", false, function(Value)
    ESP.mediumSafe = Value 
end)

Main4:AddToggle("Show Small Safes", false, function(Value)
    ESP.smallSafe = Value 
end)

Main4:AddToggle("Show Registers", false, function(Value)
    ESP.registerSafe = Value 
end)

Main4:AddToggle("Show ATMs", false, function(Value)
    ESP.atmPart = Value 
end)

Main4:AddToggle("Show Dealers", false, function(Value)
    ESP.dealerStore = Value 
end)

Main4:AddToggle("Show Scraps", false, function(Value)
    ESP.scrapPart = Value 
end)

Main5:AddTextbox("Player Hit", "Name", function(V)
    _G.TPHIT = V
end)

Main5:AddButton("Tp Hit", function()
    local Client = game.Players.LocalPlayer; local Clients = game.Players
local ReplicatedStorage = game:GetService("ReplicatedStorage")

function Hit(Target, Part, Debounce, Debounce2)

	local return_teleport = Client.Character.HumanoidRootPart.CFrame
	local return_value
	local time = tick();
    
	local DebounceArgs = {}

	DebounceArgs[1] = "\240\159\154\168"
	DebounceArgs[2] = time
	DebounceArgs[3] = Client.Character:FindFirstChildOfClass("Tool")
	DebounceArgs[4] = "43TRFWJ"
	DebounceArgs[5] = "Normal"
	DebounceArgs[6] = time - 0
	DebounceArgs[7] = true

	return_value = ReplicatedStorage.Events["XMHH.1"]:InvokeServer(unpack(DebounceArgs))

	wait(Debounce)

		Client.Character.HumanoidRootPart.CFrame = Target["HumanoidRootPart"].CFrame + Vector3.new(0,3,0)

		wait(Debounce2)
        for _,v in next, Clients:GetChildren() do if v ~= Client and v.Character then if v.Character:FindFirstChildOfClass("Humanoid") then
            if (Client.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude < 15 then

		local HitArgs = {}

		HitArgs[1] = "\240\159\154\168"
		HitArgs[2] = time
		HitArgs[3] = Client.Character:FindFirstChildOfClass("Tool")
		HitArgs[4] = "2389ZFX33"
		HitArgs[5] = return_value
		HitArgs[6] = false
		HitArgs[7] = Client.Character["Right Arm"]
		HitArgs[8] = v.Character[Part]
		HitArgs[9] = v.Character
		HitArgs[10] = Client.Character["Right Arm"].Position
		HitArgs[11] = v.Character[Part].Position
		ReplicatedStorage.Events["XMHH2.1"]:FireServer(unpack(HitArgs)) ReplicatedStorage.Events["XMHH2.1"]:FireServer(unpack(HitArgs)) 
		ReplicatedStorage.Events["XMHH2.1"]:FireServer(unpack(HitArgs)) ReplicatedStorage.Events["XMHH2.1"]:FireServer(unpack(HitArgs))
    end
end
end
end

		Client.Character.HumanoidRootPart.CFrame = return_teleport

end

function Get(String)
    local Found
    local strl = String:lower()

        for i,v in next, Clients:GetChildren() do
            if v.Name:lower():sub(1, #String) == String:lower() or v.DisplayName:lower():sub(1, #String) == String:lower() then
                Found = v.Character
            end
		end

    return Found  
end

local configs = {
    Bat = {0.1, 0.15},
    Fists = {0.03, 0.08},
    Axe = {0.5, 0.15},
    Chainsaw = {0, 0.1}
}

function GetDebounce2(Target)
    local hrp = Target.HumanoidRootPart
    local hrp2 = Client.Character.HumanoidRootPart
    local debounce = 0.1
    
    local mag = (hrp.Position - hrp2.Position).magnitude
    
    if mag/5275 < 0.2 then
        debounce = mag/5275 + 0.85 + mag/tick()

    else

        debounce = 0.2 - mag/52750
    end

    return debounce
end

local Target = Get (_G.TPHIT)
Hit(Target, "Head", 0.15, GetDebounce2(Target))         
end)

Main5:AddSeperator("Teleports")

Main5:AddButton("Vibe Check", function()
    local LocalPlayer = game.Players.LocalPlayer

    local function Ragdoll()
    getrenv()._G.RagdollChar(1.5)
    end
    
    local function TeleportTO(Position)
    
    local SelfCharacter = LocalPlayer.Character
    local SelfRootPart, SelfHumanoid = SelfCharacter and SelfCharacter:FindFirstChild("HumanoidRootPart"), SelfCharacter and SelfCharacter:FindFirstChildOfClass("Humanoid")
    if not SelfCharacter or not SelfRootPart or not SelfHumanoid then return end
    
    if not Position then
    return
    end
    
    SelfRootPart.Position = Vector3.new(0, -1e9, 0)
    wait(1)
    SelfHumanoid:UnequipTools()
    SelfRootPart.Position = Position
    wait(1.4)
    for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        Ragdoll()
        wait(1.5)
        SelfHumanoid:EquipTool(v)
        break
    end
    end
    end
    TeleportTO(Vector3.new(-4754.68848, -200.966553, -972.997437))
end)

Main5:AddButton("Vibe Button", function()
    local LocalPlayer = game.Players.LocalPlayer

    local function Ragdoll()
    getrenv()._G.RagdollChar(1.5)
    end
    
    local function TeleportTO(Position)
    
    local SelfCharacter = LocalPlayer.Character
    local SelfRootPart, SelfHumanoid = SelfCharacter and SelfCharacter:FindFirstChild("HumanoidRootPart"), SelfCharacter and SelfCharacter:FindFirstChildOfClass("Humanoid")
    if not SelfCharacter or not SelfRootPart or not SelfHumanoid then return end
    
    if not Position then
    return
    end
    
    SelfRootPart.Position = Vector3.new(0, -1e9, 0)
    wait(1)
    SelfHumanoid:UnequipTools()
    SelfRootPart.Position = Position
    wait(1.4)
    for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        Ragdoll()
        wait(1.5)
        SelfHumanoid:EquipTool(v)
        break
    end
    end
    end
    TeleportTO(Vector3.new(-4776.8501, -36.7657585, -808.682007, 0, 0, 1, 0, 1, -0, -1, 0, 0))
end)

Main5:AddButton("Tower", function()
    local LocalPlayer = game.Players.LocalPlayer

    local function Ragdoll()
    getrenv()._G.RagdollChar(1.5)
    end
    
    local function TeleportTO(Position)
    
    local SelfCharacter = LocalPlayer.Character
    local SelfRootPart, SelfHumanoid = SelfCharacter and SelfCharacter:FindFirstChild("HumanoidRootPart"), SelfCharacter and SelfCharacter:FindFirstChildOfClass("Humanoid")
    if not SelfCharacter or not SelfRootPart or not SelfHumanoid then return end
    
    if not Position then
    return
    end
    
    SelfRootPart.Position = Vector3.new(0, -1e9, 0)
    wait(1)
    SelfHumanoid:UnequipTools()
    SelfRootPart.Position = Position
    wait(1.4)
    for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        Ragdoll()
        wait(1.5)
        SelfHumanoid:EquipTool(v)
        break
    end
    end
    end
    TeleportTO(Vector3.new(-4458.69434, 120.390343, -890.67627, 0, 0, 1, 0, 1, -0, -1, 0, 0))
end)

Main5:AddButton("ATM", function()
    local LocalPlayer = game.Players.LocalPlayer

    local function Ragdoll()
    getrenv()._G.RagdollChar(1.5)
    end
    
    local function TeleportTO(Position)
    
    local SelfCharacter = LocalPlayer.Character
    local SelfRootPart, SelfHumanoid = SelfCharacter and SelfCharacter:FindFirstChild("HumanoidRootPart"), SelfCharacter and SelfCharacter:FindFirstChildOfClass("Humanoid")
    if not SelfCharacter or not SelfRootPart or not SelfHumanoid then return end
    
    if not Position then
    return
    end
    
    SelfRootPart.Position = Vector3.new(0, -1e9, 0)
    wait(1)
    SelfHumanoid:UnequipTools()
    SelfRootPart.Position = Position
    wait(1.4)
    for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        Ragdoll()
        wait(1.5)
        SelfHumanoid:EquipTool(v)
        break
    end
    end
    end
    TeleportTO(Vector3.new(-4463.01514, 0.90637207, -453.874664, -1.1920929e-07, 0, 1.00000012, 0, 1, 0, -1.00000012, 0, -1.1920929e-07))
end)

Main5:AddButton("Dealer", function()
    local LocalPlayer = game.Players.LocalPlayer

    local function Ragdoll()
    getrenv()._G.RagdollChar(1.5)
    end
    
    local function TeleportTO(Position)
    
    local SelfCharacter = LocalPlayer.Character
    local SelfRootPart, SelfHumanoid = SelfCharacter and SelfCharacter:FindFirstChild("HumanoidRootPart"), SelfCharacter and SelfCharacter:FindFirstChildOfClass("Humanoid")
    if not SelfCharacter or not SelfRootPart or not SelfHumanoid then return end
    
    if not Position then
    return
    end
    
    SelfRootPart.Position = Vector3.new(0, -1e9, 0)
    wait(1)
    SelfHumanoid:UnequipTools()
    SelfRootPart.Position = Position
    wait(1.4)
    for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        Ragdoll()
        wait(1.5)
        SelfHumanoid:EquipTool(v)
        break
    end
    end
    end
    TeleportTO(Vector3.new(-4815.71484, 9.84649944, -711.355225, 0.707134247, -0.707079291, 0, -0.707079291, -0.707134247, -0, 0, 0, -1))
end)

Main5:AddButton("Armory 1", function()
    local LocalPlayer = game.Players.LocalPlayer

    local function Ragdoll()
    getrenv()._G.RagdollChar(1.5)
    end
    
    local function TeleportTO(Position)
    
    local SelfCharacter = LocalPlayer.Character
    local SelfRootPart, SelfHumanoid = SelfCharacter and SelfCharacter:FindFirstChild("HumanoidRootPart"), SelfCharacter and SelfCharacter:FindFirstChildOfClass("Humanoid")
    if not SelfCharacter or not SelfRootPart or not SelfHumanoid then return end
    
    if not Position then
    return
    end
    
    SelfRootPart.Position = Vector3.new(0, -1e9, 0)
    wait(1)
    SelfHumanoid:UnequipTools()
    SelfRootPart.Position = Position
    wait(1.4)
    for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        Ragdoll()
        wait(1.5)
        SelfHumanoid:EquipTool(v)
        break
    end
    end
    end
    TeleportTO(Vector3.new(-4769.7275390625, 3.8944435119628906, -360.00042724609375))
end)

Main5:AddButton("Armory 2", function()
    local LocalPlayer = game.Players.LocalPlayer

    local function Ragdoll()
    getrenv()._G.RagdollChar(1.5)
    end
    
    local function TeleportTO(Position)
    
    local SelfCharacter = LocalPlayer.Character
    local SelfRootPart, SelfHumanoid = SelfCharacter and SelfCharacter:FindFirstChild("HumanoidRootPart"), SelfCharacter and SelfCharacter:FindFirstChildOfClass("Humanoid")
    if not SelfCharacter or not SelfRootPart or not SelfHumanoid then return end
    
    if not Position then
    return
    end
    
    SelfRootPart.Position = Vector3.new(0, -1e9, 0)
    wait(1)
    SelfHumanoid:UnequipTools()
    SelfRootPart.Position = Position
    wait(1.4)
    for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        Ragdoll()
        wait(1.5)
        SelfHumanoid:EquipTool(v)
        break
    end
    end
    end
    TeleportTO(Vector3.new(-4143.83154296875, 3.899510383605957, -183.46885681152344))
end)



Main5:AddButton("Cafe", function()
    local LocalPlayer = game.Players.LocalPlayer

    local function Ragdoll()
    getrenv()._G.RagdollChar(1.5)
    end
    
    local function TeleportTO(Position)
    
    local SelfCharacter = LocalPlayer.Character
    local SelfRootPart, SelfHumanoid = SelfCharacter and SelfCharacter:FindFirstChild("HumanoidRootPart"), SelfCharacter and SelfCharacter:FindFirstChildOfClass("Humanoid")
    if not SelfCharacter or not SelfRootPart or not SelfHumanoid then return end
    
    if not Position then
    return
    end
    
    SelfRootPart.Position = Vector3.new(0, -1e9, 0)
    wait(1)
    SelfHumanoid:UnequipTools()
    SelfRootPart.Position = Position
    wait(1.4)
    for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        Ragdoll()
        wait(1.5)
        SelfHumanoid:EquipTool(v)
        break
    end
    end
    end
    TeleportTO(Vector3.new(-4668, 6, -257))
end)




Main5:AddButton("Gas Station", function()
    local LocalPlayer = game.Players.LocalPlayer

    local function Ragdoll()
    getrenv()._G.RagdollChar(1.5)
    end
    
    local function TeleportTO(Position)
    
    local SelfCharacter = LocalPlayer.Character
    local SelfRootPart, SelfHumanoid = SelfCharacter and SelfCharacter:FindFirstChild("HumanoidRootPart"), SelfCharacter and SelfCharacter:FindFirstChildOfClass("Humanoid")
    if not SelfCharacter or not SelfRootPart or not SelfHumanoid then return end
    
    if not Position then
    return
    end
    
    SelfRootPart.Position = Vector3.new(0, -1e9, 0)
    wait(1)
    SelfHumanoid:UnequipTools()
    SelfRootPart.Position = Position
    wait(1.4)
    for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        Ragdoll()
        wait(1.5)
        SelfHumanoid:EquipTool(v)
        break
    end
    end
    end
    TeleportTO(Vector3.new(-4429.2177734375, 4.096165657043457, 163.4987335205078))
end)

Main5:AddButton("Subway", function()
    local LocalPlayer = game.Players.LocalPlayer

    local function Ragdoll()
    getrenv()._G.RagdollChar(1.5)
    end
    
    local function TeleportTO(Position)
    
    local SelfCharacter = LocalPlayer.Character
    local SelfRootPart, SelfHumanoid = SelfCharacter and SelfCharacter:FindFirstChild("HumanoidRootPart"), SelfCharacter and SelfCharacter:FindFirstChildOfClass("Humanoid")
    if not SelfCharacter or not SelfRootPart or not SelfHumanoid then return end
    
    if not Position then
    return
    end
    
    SelfRootPart.Position = Vector3.new(0, -1e9, 0)
    wait(1)
    SelfHumanoid:UnequipTools()
    SelfRootPart.Position = Position
    wait(1.4)
    for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        Ragdoll()
        wait(1.5)
        SelfHumanoid:EquipTool(v)
        break
    end
    end
    end
    TeleportTO(Vector3.new(-4600.34619140625, 3.899278163909912, -694.621826171875))
end)



Main5:AddSeperator("Auto-Farm")

Main5:AddButton("Auto Farm", function()
    function Notify(msg)
        local l__ReplicatedStorage__1 = game:GetService("ReplicatedStorage");
        l__ReplicatedStorage__1.Events2.Notification:Fire({
            Title = "Elite", 
            Text = tostring(msg), 
            Duration = 5
        }, "lost");
        end
        
Notify("Starting Auto Farm...")
local GetService                        = game.GetService
local Request                           = (syn and syn.request) or request

-- #region // Services

    if not syn or KRNL_LOADED then
        messagebox("Your exploit isn't supported by the script, we recommend you to use another one such as Synapse or Krnl", "elite", 0)
    end

    local Global                        = GetService(game, "Workspace")
    local Players                       = GetService(game, "Players")
    local Storage                       = GetService(game, "ReplicatedStorage")

    local HttpService                   = GetService(game, "HttpService")
    local RunService                    = GetService(game, "RunService")
    local UserInputService              = GetService(game, "UserInputService")

-- #endregion

-- #region // Variables

    local TPCooldown
    local CurrentTarget
    local CanStartDoing
    local FarmingRN
    local CanFarmHalal
    local Environment                   


    local Client
    local Character

    local Library   

-- #endregion

-- #region // Functions

    function ClosestObject()
        for i, Object in pairs(Global.Map.BredMakurz:GetChildren()) do
            if Object:FindFirstChild("Values") then
                if Object:FindFirstChild("Values").Broken.Value == false then
                    if Object:FindFirstChild("Values").Broken.Value == false then
                        return Object, Object:FindFirstChild("Values")
                    end
                end
            end
		end
    end

    function SafeLoad(Link)
        local Success, Result
        Success, Result = pcall(function()
            return loadstring((Request({ Url = Link }).Body))()
        end)

        return Result
    end
    
    function Teleport(Position, MSG)
        if not TPCooldown then
            TPCooldown                        = true

            Client.Character.HumanoidRootPart.Position         = Vector3.new(5.587935447592871e-09, -3.4028234663852886e+38, -1.3969838619232178e-09)
            
            Client.Character.HumanoidRootPart.Parent.Humanoid:UnequipTools()

            delay(1, function()
                Client.Character.HumanoidRootPart.Position     = Position
                Client.Character.HumanoidRootPart.Parent.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Crowbar") or game.Players.LocalPlayer.Backpack:FindFirstChild("Fists"))
            end)
            
            delay(5, function()
                TPCooldown                    = false
            end)
        end
    end

    function PickNearCash()
        for i, Money in pairs(Global.Filter.SpawnedBread:GetChildren()) do
            if (Client.Character.HumanoidRootPart.Position - Money.Position).Magnitude < 10 then
                return Money
            end
        end
    end

    function GetDealer(StockNeeded)
        for i, Dealer in pairs(Global.Map.Shopz:GetChildren()) do
            if Dealer:FindFirstChild("CurrentStocks") and Dealer:FindFirstChild("Type").Value == "IllegalStore" then
                if Dealer:FindFirstChild("CurrentStocks"):FindFirstChild(StockNeeded).Value > 0 then
                    return Dealer
                end
            end
        end
    end

    function GetATM()
        for i, ATMz in pairs(Global.Map.ATMz:GetChildren()) do
            return ATMz
        end
    end

-- #endregion

-- #region // Fake

    TPCooldown                          = false
    CanFarmHalal                        = false

    Library                             = SafeLoad("https://raw.githubusercontent.com/12436712712761476197197917189/ui-manager/main/ui")
    Environment                         = SafeLoad("https://raw.githubusercontent.com/12436712712761476197197917189/enivro/main/enviroment")

    Client                              = Players.LocalPlayer
    Character                           = Client.Character or Client.CharacterAdded:Wait()

-- #endregion



Client.CharacterAdded:Connect(function(NewChar)
    Character = NewChar
end)

Storage.PlayerbaseData2[Client.Name].CanRespawn.Changed:Connect(function(NewValue)
    if NewValue == true then
        Storage.Events.DeathRespawn:InvokeServer()

        CurrentTarget = nil
        FarmingRN = false
        CanFarmHalal = false

        
    else
        repeat
            wait()
        until not Environment:CheckIfUserIsDowned(Client) and Environment:CheckIfCharacterValid(Client.Character)

        wait(5)

        

        CurrentTarget = nil
        FarmingRN = false
        CanFarmHalal = false
    end
end)

RunService.RenderStepped:Connect(function()
    local Success, Error = pcall(function()
        if Storage.PlayerbaseData2[Client.Name].Cash.Value < 10000 then
            if CurrentTarget ~= nil then
                if CanFarmHalal == false then
                    CanFarmHalal = true
        
                    if not Environment:CheckIfUserIsDowned(Client) then
                        if Character then
                            if Character:FindFirstChild("HumanoidRootPart") then
                                if Character:FindFirstChild("Crowbar") or Client.Backpack:FindFirstChild("Crowbar") then
                                    if (Character.HumanoidRootPart.Position - CurrentTarget.MainPart.Position).Magnitude > 5 then
                                        Teleport(CurrentTarget.MainPart.CFrame * Vector3.new(0, 1.75, -3), string.format)
            
                                        delay(5, function()
                                            CanFarmHalal = false
                                        end)
                                    else
                                        delay(5, function()
                                            if CurrentTarget then
                                                if (Character.HumanoidRootPart.Position - CurrentTarget.MainPart.Position).Magnitude < 5 then
                                                    CanStartDoing = true
                                                    CurrentTarget = nil
                                                end
                                            end
            
                                            CanFarmHalal = false
                                        end)
                                    end
                                else
                                    if Storage.PlayerbaseData2[Client.Name].Cash.Value > 120 then
                                        if (Character.HumanoidRootPart.Position - CurrentTarget.MainPart.Position).Magnitude > 5 then
                                            Teleport(CurrentTarget.MainPart.CFrame * Vector3.new(0, 1.75, -3), string.format)
            
                                            delay(5, function()
                                                CanFarmHalal = false
                                            end)
                                        else
                                            delay(5, function()
                                                if CurrentTarget then
                                                    if (Character.HumanoidRootPart.Position - CurrentTarget.MainPart.Position).Magnitude < 5 then
                                                        if not Character:FindFirstChild("Crowbar") or not Client.Backpack:FindFirstChild("Crowbar") then
                                                            Storage.Events.SSHPRMTE1:InvokeServer("IllegalStore", "Melees", "Crowbar", CurrentTarget.MainPart)
                                                            CurrentTarget   = nil 
                                                        end
                                                    end 
                                                end 
                
                                                CanFarmHalal = false
                                            end)
                                        end
                                    end
                                end
                            end 
                        end
                    else
                        CurrentTarget = false
                        CanFarmHalal = false
                    end
                end
            end
        end

        if Storage.PlayerbaseData2[Client.Name].Cash.Value > 10000 then
            if (Character.HumanoidRootPart.Position - GetATM().MainPart.Position).Magnitude > 5 then
                Teleport(GetATM().MainPart.CFrame * Vector3.new(0, 1.75, -3), string.format)

                delay(5, function()
                    CanFarmHalal = true
                end)
            else
                delay(5, function()
                    if (Character.HumanoidRootPart.Position - GetATM().MainPart.Position).Magnitude < 5 then
                        Storage.Events.ATM:InvokeServer("DP", Storage.PlayerbaseData2[Client.Name].Cash.Value, GetATM().MainPart)
                        CurrentTarget = nil
                    end

                    CanFarmHalal = true
                end)
            end
        end
    end)

    if Error then
        game.Players.LocalPlayer:Kick("error please report this to Elite")
    end
end)

function Halal()
    pcall(function() 
        if Storage.PlayerbaseData2[Client.Name].Cash.Value < 10000 then
            if Character:FindFirstChild("Crowbar") or Client.Backpack:FindFirstChild("Crowbar") and not Environment:CheckIfUserIsDowned(Client) then
                local FarmObject, ValuesFolder      = ClosestObject()
    
                if FarmObject then
                    CurrentTarget                   = FarmObject
                    FarmingRN                       = true
    
                    repeat
                        wait()
                    until CanStartDoing == true or Environment:CheckIfUserIsDowned(Client) and Character.Humanoid.Health < 1
        
                    if Environment:CheckIfUserIsDowned(Client) and Character.Humanoid.Health < 1 then
                        delay(1, function()
                            CurrentTarget = nil
                            FarmingRN = false
                            CanStartDoing = false
                        end)
                    elseif CanStartDoing then    
                        
        
                        repeat
                            GeneratedSeed = Storage.Events:FindFirstChild("XMHH.1"):InvokeServer(
                                "\240\159\154\168",
                                tick(),
                                Character:FindFirstChild("Crowbar"),
                                "DZDRRRKI",
                                FarmObject,
                                "Register"
                            ) 
            
                            if GeneratedSeed ~= nil then
                                Storage.Events:FindFirstChild("XMHH2.1"):FireServer(
                                    "\240\159\154\168",
                                    tick(),
                                    Character:FindFirstChild("Crowbar"),
                                    "2389ZFX33",
                                    GeneratedSeed,
                                    false,
                                    Character:FindFirstChild("Crowbar"):FindFirstChild("Handle"),
                                    FarmObject.MainPart,
                                    FarmObject,
                                    FarmObject.MainPart.Position,
                                    FarmObject.MainPart.Position
                                ) 
                            end
                        until ValuesFolder.Broken.Value == true or Environment:CheckIfUserIsDowned(Client) and Character.Humanoid.Health < 1
                        
                        if Environment:CheckIfUserIsDowned(Client) and Character.Humanoid.Health < 1 then 
                            delay(1, function()
                                CurrentTarget = nil
                                FarmingRN = false
                                CanStartDoing = true
                            end)
                        elseif ValuesFolder.Broken.Value == true then
                                           
                        end
            
                        repeat
                            local Cash = PickNearCash()
                        
                            if Cash ~= nil then
                                Storage.Events:FindFirstChild("CZDPZUS"):FireServer(Cash)                
                                wait(2)
                            end
                        until PickNearCash() == nil or Environment:CheckIfUserIsDowned(Client) and Character.Humanoid.Health < 1
                        
                        if Environment:CheckIfUserIsDowned(Client) and Character.Humanoid.Health < 1 then                            
                            delay(1, function()
                                CurrentTarget = nil
                                FarmingRN = false
                                CanStartDoing = false
                            end)      
                        elseif PickNearCash() == nil then
                                 
                            
                            delay(1, function()
                                CurrentTarget = nil
                                FarmingRN = false
                                CanStartDoing = false
                            end)
                        end
                    end
                else
                    
                end
            else
                CurrentTarget = GetDealer("Crowbar")
            end  
        end
    end)
end

while wait(5) do
    pcall(function()        
        if not Environment:CheckIfUserIsDowned(Client) and Environment:CheckIfCharacterValid(Client.Character) then
            if not FarmingRN then
                Halal()
            end 
        end
    end)
end
end)

Main6:AddSeperator("ESP Settings")
Main6:AddColorpicker("Tool ESP", ESPFramework.ToolColor, function(V)
    ESPFramework.ToolColor = V
    ESPSettings.ToolColor = V
end)



Main6:AddColorpicker("Health ESP", ESPFramework.HealthColor, function(V)
     ESPFramework.HealthColor = V
     ESPSettings.HealthColor = V
end)

Main6:AddColorpicker("DistanceESP", ESPFramework.DistanceColor, function(V)
	ESPFramework.DistanceColor = V
	ESPSettings.DistanceColor = V
 end)

Main6:AddColorpicker("Main ESP", ESPFramework.Color, function(V)
    ESPFramework.Color = V
    ESPSettings.ESPColor = V
end)

Main6:AddSeperator("UI Settings")

Main6:AddColorpicker("Accent 1", Framework.theme.accentcolor, function(V)
    Framework.theme.accentcolor = V
end)

Main6:AddColorpicker("Accent 2", Framework.theme.accentcolor2, function(V)
    Framework.theme.accentcolor2 = V
end)

Main7:AddSeperator("Credits :)")

Main7:AddSeperator("Helpers")

Main7:AddLabel("Outliers Hub - Helping me")
Main7:AddLabel("Mr Birdz - Helping me")
Main7:AddLabel("redd - Helping me")
Main7:AddSeperator("Developer")
Main7:AddLabel("Vex - Developing")
Main7:AddLabel("Dox - Developing / Owner")

Main7:AddSeperator("Their Discord's")

Main7:AddButton("Join Outliers Hub", function()
    setclipboard("https://discord.gg/outliershub")    
    function Notify(msg)
        local l__ReplicatedStorage__1 = game:GetService("ReplicatedStorage");
        l__ReplicatedStorage__1.Events2.Notification:Fire({
            Title = "Outliers", 
            Text = tostring(msg), 
            Duration = 5
        }, "lost");
        end
        
        Notify("Copied To ClipBoard")  
end)

Main7:AddButton("Join BirdzWare", function()
    setclipboard("https://discord.gg/DVYTABghfS")   
    function Notify(msg)
        local l__ReplicatedStorage__1 = game:GetService("ReplicatedStorage");
        l__ReplicatedStorage__1.Events2.Notification:Fire({
            Title = "BirdzWare", 
            Text = tostring(msg), 
            Duration = 5
        }, "lost");
        end
        
        Notify("Copied To ClipBoard")    
end)


spawn(function()
    local function closestHumanoidRootPart(maxDist)
    local dist = maxDist
    local ret = nil
    for i, v in next, game.Players:GetPlayers() do
        if v ~= game.Players.LocalPlayer then
            if v.Character then
                local chr = v.Character
                if chr:FindFirstChild("HumanoidRootPart") then
                    if chr.Humanoid.Health > 0 then
                        local e = chr.HumanoidRootPart
                        local d = (e.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        if d < dist then
                            dist = d
                            ret = e
                        end
                    end
                end
            end
        end
    end
    return ret
end
    while task.wait() do
    if KillAuraEnabled then
        local ClosestHumanoidRootPart = closestHumanoidRootPart(10)
       if not ClosestHumanoidRootPart then continue end
       if not game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool") then
                continue
         end
        -- if the target or player is downed
        -- check if the player is holding a actual melee
        local KillAuraValue = game:GetService("ReplicatedStorage").Events["XMHH.1"]:InvokeServer(
            "\240\159\154\168",
            tick(),
            game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool"),
            "43TRFWJ",
            "Normal",
            tick(),
            true
        )
        wait(KillAuraTime)
        game:GetService("ReplicatedStorage").Events["XMHH2.1"]:FireServer(
            "\240\159\154\168",
            tick(),
            game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool"),
            "2389ZFX33",
            KillAuraValue,
            false,
            game:GetService("Players").LocalPlayer.Character["Right Arm"],
            ClosestHumanoidRootPart.Parent:FindFirstChild("Head"),
            ClosestHumanoidRootPart.Parent,
            game:GetService("Players").LocalPlayer.Character["Right Arm"].Position,
            ClosestHumanoidRootPart.Parent:FindFirstChild("Head").Position
        )
    end
end
end)

game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(Character)
    Character.ChildAdded:Connect(function(Object)
        if KillAuraEnabled and Object:IsA("Tool") then
pcall(function()
            KillAuraTime = require(game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool").Config).Mains.E.SwingTime
end)
        end
    end)
end)

if game:GetService("Players").LocalPlayer.Character ~= nil then
    game:GetService("Players").LocalPlayer.Character.ChildAdded:Connect(function(Object)
        if KillAuraEnabled  and Object:IsA("Tool") then
pcall(function()
            KillAuraTime = require(game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool").Config).Mains.E.SwingTime
end)
        end
    end)
end
